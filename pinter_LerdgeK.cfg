#########################################################
## Configuration pour la carte Lerdge-K                ##
## Info :                                              ##
##    - 2 Moteurs Z                                    ##
##    - TMC2209                                        ##
##    - BLTouch                                        ##
##    - Led                                            ##
##    - Filament Sensor                                ##
#########################################################

#########################################################
## Donnee Imprimante :

[printer]
kinematics: cartesian
max_velocity: 300
max_accel: 3000
max_z_velocity: 5
max_z_accel: 100

[mcu]
serial:/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0  ## Obtain definition by "ls /dev/serial/by-id/*" then unplug to verify
restart_method: command

[temperature_sensor Lerdge_MCU]
sensor_type: temperature_mcu

[temperature_sensor Host]
sensor_type: temperature_host

[virtual_sdcard]
path: /home/pi/gcode_files

[gcode_arcs]
resolution: 0.1
#    Un arc sera divisé en segments. La longueur de chaque segment sera égale à
#    la résolution en mm définie ci-dessus. Des valeurs plus faibles produiront un
#    arc plus fin, mais également plus de travail de votre machine. Les arcs plus
#    petits que la valeur configurée deviendront des lignes droites. La valeur par
#    défaut est 1 mm.

[pause_resume]

[display_status]

#########################################################
## Moteur Axe X :

[stepper_x]
step_pin: PG1
dir_pin: PB10
enable_pin: !PG0
microsteps: 16
rotation_distance: 40
endstop_pin: tmc2209_stepper_x:virtual_endstop 
position_endstop: 0
position_max: 238
homing_speed: 50
homing_retract_dist: 0

[tmc2209 stepper_x]
uart_pin: PB2
run_current: 1.000
hold_current: 0.500
sense_resistor: 0.110
diag_pin: ^PG3
driver_SGTHRS: 100
stealthchop_threshold: 1

#########################################################
## Moteur Axe Y :

[stepper_y]
step_pin: PF14
dir_pin: PF15
enable_pin: !PF13
microsteps: 16
rotation_distance: 40
endstop_pin: tmc2209_stepper_y:virtual_endstop 
position_endstop: 0
position_max: 190
homing_speed: 50

[tmc2209 stepper_y]
uart_pin: PE2
run_current: 1.000
hold_current: 0.500
sense_resistor: 0.110
diag_pin: ^PG4
driver_SGTHRS: 100
stealthchop_threshold: 1

#########################################################
## Moteur Axe Z :

[stepper_z]
step_pin: PF11
dir_pin: PF12
enable_pin: !PC5
microsteps: 16
rotation_distance: 8
endstop_pin: probe:z_virtual_endstop
#position_endstop: 0.0
position_max: 190
#position_min: -6.0
homing_speed: 20
second_homing_speed: 2

[stepper_z1]
step_pin: PC14
dir_pin: PC13
enable_pin: !PC15
microsteps: 16
rotation_distance: 8

[tmc2209 stepper_z]
uart_pin: PE3
run_current: 1.000
hold_current: 0.500
stealthchop_threshold: 1

[tmc2209 stepper_z1]
uart_pin: PE0
run_current: 1.000
hold_current: 0.500
stealthchop_threshold: 1

#########################################################
## Extruder :

[extruder]
step_pin: PF4
dir_pin: PF3
enable_pin: !PF5
microsteps: 16
rotation_distance: 34.557
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PA1
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC1
pullup_resistor: 3000
control: pid
pid_Kp: 22
pid_Ki: 1.08
pid_Kd: 114
min_temp: -100
max_temp: 260
min_extrude_temp: 0

#########################################################
## Bed :

[heater_bed]
heater_pin: PA2
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC0
pullup_resistor: 3000
control: pid
pid_Kp: 22
pid_Ki: 1.08
pid_Kd: 114
min_temp: -100
max_temp: 100

[bed_screws]
screw0: 119,95
screw0_name: Centre
screw1: 30,30
screw1_name: Avant Gauche
screw2: 208,30
screw2_name: Avant Droite
screw3: 208,160
screw3_name: Arriere Droite 
screw4: 30,160
screw4_name: Arriere Gauche
horizontal_move_z: 10.
speed: 70.
screw_thread: CW-M3

#########################################################
## Fan :

[fan]
pin: PB1 #PB2

[heater_fan Hotend0_Fan]
pin: PF7
heater: extruder
heater_temp: 45.0

[controller_fan Board_Cooling_Fan]
pin: PF8
idle_timeout:0

#########################################################
## LED :

[led LED]
white_pin:PB6
initial_WHITE: 1.0

[led RGB-LED]
green_pin:PB8
blue_pin:PB9
red_pin:PB7
initial_RED: 1.0
initial_GREEN: 1.0
initial_BLUE: 1.0

#########################################################
## Capteurs Filaments :

[filament_switch_sensor RUNOUT]
pause_on_runout: True
runout_gcode:
     G1 E10 F5000
     G1 E-100 F5000
insert_gcode: 
event_delay: 3.0
pause_delay: 1
switch_pin: PE5

#########################################################
## BLTouch "https://www.youtube.com/watch?v=5vmjBXvY6BA"

[bltouch]
sensor_pin: ^PG6
control_pin: PB11
set_output_mode: 5V
x_offset: 45.75
y_offset: -3.40
z_offset: 3.28
samples: 2
speed: 2

[safe_z_home]
home_xy_position: 119,95
speed: 50
z_hop: 5
z_hop_speed: 5

[bed_mesh]
speed = 80
horizontal_move_z = 5
mesh_min = 10,10
mesh_max = 200,200
probe_count = 5,5
mesh_pps: 2,2
fade_start: 1
fade_end: 10
fade_target: 0

#[bed_screws]
#screw1: 30,30
#screw1_name: Vis Av Gauche
#screw2: 208,30
#screw2_name: Vis Av Droite
#screw3: 208,160
#screw3_name: Vis Ar Droite 
#screw4: 30,160
#screw4_name: Vis Ar Gauche

##################################################################
##  GCODE_macro

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
    TURN_OFF_HEATERS
    CANCEL_PRINT_BASE

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
    ##### read E from pause macro #####
    {% set E = printer["gcode_macro PAUSE"].extrude|float %}
    ##### set park positon for x and y #####
    # default is your max posion from your printer.cfg
    {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
    {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
    ##### calculate save lift position #####
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}
    {% if act_z < (max_z - 2.0) %}
        {% set z_safe = 2.0 %}
    {% else %}
        {% set z_safe = max_z - act_z %}
    {% endif %}
    ##### end of definitions #####
    PAUSE_BASE
    G91
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G1 E-{E} F2100
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}
    {% if "xyz" in printer.toolhead.homed_axes %}
      G1 Z{z_safe} F900
      G90
      G1 X{x_park} Y{y_park} F6000
    {% else %}
      {action_respond_info("Printer not homed")}
    {% endif %} 
    
[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
    ##### read E from pause macro #####
    {% set E = printer["gcode_macro PAUSE"].extrude|float %}
    #### get VELOCITY parameter if specified ####
    {% if 'VELOCITY' in params|upper %}
      {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
    {%else %}
      {% set get_params = "" %}
    {% endif %}
    ##### end of definitions #####
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G91
      G1 E{E} F2100
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}  
    RESUME_BASE {get_params}





